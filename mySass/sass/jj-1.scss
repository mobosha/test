@charset "utf-8";
/*第一章：sass进阶篇*/
// Sass的控制命令
/*@if*/
//@if 指令是一个 SassScript，它可以根据条件来处理样式块，如果条件为 true 返回一个样式块，反之 false 返回另一个样式块。在 Sass 中除了 @if 之，还可以配合 @else if 和 @else 一起使用
@mixin blockOrHidden($boolean:true) {
    @if $boolean {
      @debug "$boolean is #{$boolean}";
      display: block;
    }
    @else {
      @debug "$boolean is #{$boolean}";
      display: none;
    }
}
.block {
  @include blockOrHidden;
}

.hidden{
  @include blockOrHidden(false);
}




/*@for循环（上）*/
//在制作网格系统的时候，大家应该对 .col1~.col12 这样的印象较深。在 CSS 中你需要一个一个去书写，但在 Sass 中，可以使用 @for 循环来完成。在 Sass 的 @for 循环中有两种方式：
//@for $i from <start> through <end>
//@for $i from <start> to <end>
//$i 表示变量
//start 表示起始值
//end 表示结束值
//这两个的区别是关键字 through 表示包括 end 这个数，而 to 则不包括 end 这个数。
//through     (表示包括 end 这个数)
@for $i from 1 through 3 {
  .item-#{$i} { width: 2em * $i; }
}

//to   (而 to 则不包括 end 这个数)
@for $i from 1 to 3 {
  .item-#{$i} { width: 2em * $i; }
}

/* col-1 ~ col-12 */
@for $i from 1 through 12 {
  .col-#{$i}{width:1/12 * $i * 100%;}
}





/*@for循环（下）*/
//@for应用在网格系统生成各个格子 class 的代码：
$grid-prefix: span !default;
$grid-width: 60px !default;
$grid-gutter: 20px !default;

%grid {
  float: left;
  margin-left: $grid-gutter / 2;
  margin-right: $grid-gutter / 2;
}

@for $i from 1 through 12 {
  .#{$grid-prefix}#{$i}{
    width: $grid-width * $i + $grid-gutter * ($i - 1);
    @extend %grid;
  }  
}
//将上面的示例稍做修改，将 @for through 方式换成 @for to:
@for $i from 1 to 13 {
  .#{$grid-prefix}#{$i}{
    width: $grid-width * $i + $grid-gutter * ($i - 1);
    @extend %grid;
  }  
}





/*@while循环*/
//@while 指令也需要 SassScript 表达式（像其他指令一样），并且会生成不同的样式块，直到表达式值为 false 时停止循环。这个和 @for 指令很相似，只要 @while 后面的条件为 true 就会执行。
$types: 4;
$type-width: 20px;

@while $types > 0 {
    .while-#{$types} {
        width: $type-width + $types;
    }
    $types: $types - 1;
}






/*@each循环*/
//@each 循环就是去遍历一个列表，然后从列表中取出对应的值。
//@each 循环指令的形式：
//@each $var in <list>
//$var 就是一个变量名，<list> 是一个 SassScript 表达式，他将返回一个列表值。变量 $var 会在列表中做遍历，并且遍历出与 $var 对应的样式块
$list: adam john wynn mason kuroir;//$list 就是一个列表,只能使用空格隔开不能使用逗号

@mixin author-images {
    @each $author in $list {
        .photo-#{$author} {
            background: url("/images/avatars/#{$author}.png") no-repeat;
        }
    }
}

.author-bio {
    @include author-images;
}

$list: sunxiaoluo lixiaoyi sunshasha sunwenbin chengmengmegn;
@mixin author-images{
    @each $author in $list{
        .photo-#{$author}{
            background: url("/images/avatars/#{$author}.png") no-repeat;
        }
    }
}
.author-bio{
    @include author-images;
}






















































